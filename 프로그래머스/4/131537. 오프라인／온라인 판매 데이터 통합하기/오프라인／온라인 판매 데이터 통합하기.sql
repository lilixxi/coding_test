# -- 코드를 입력하세요
# SELECT DATE_FORMAT(N.SALES_DATE,'%Y-%m-%d') AS SALES_DATE , N.PRODUCT_ID, N.USER_ID, N.SALES_AMOUNT
# FROM ONLINE_SALE AS N
# LEFT JOIN OFFLINE_SALE AS F
# ON N.PRODUCT_ID = F.PRODUCT_ID 

# UNION ALL

# SELECT DATE_FORMAT(F.SALES_DATE,'%Y-%m-%d') AS SALES_DATE , F.PRODUCT_ID, NULL AS USER_ID, F.SALES_AMOUNT
# FROM ONLINE_SALE AS N
# RIGHT JOIN OFFLINE_SALE AS F
# ON N.PRODUCT_ID = F.PRODUCT_ID 

# ORDER BY SALES_DATE ASC, PRODUCT_ID ASC, USER_ID ASC;

-- LEFT JOIN: ONLINE_SALE 기준으로 데이터 결합
SELECT 
    DATE_FORMAT(N.SALES_DATE, '%Y-%m-%d') AS SALES_DATE,
    N.PRODUCT_ID,
    N.USER_ID,
    N.SALES_AMOUNT
FROM 
    ONLINE_SALE AS N
LEFT JOIN 
    OFFLINE_SALE AS F
ON 
    N.PRODUCT_ID = F.PRODUCT_ID 
    AND N.SALES_DATE = F.SALES_DATE
WHERE 
    N.SALES_DATE BETWEEN '2022-03-01' AND '2022-03-31'

UNION ALL

-- RIGHT JOIN: OFFLINE_SALE 기준으로 데이터 결합
SELECT 
    DATE_FORMAT(F.SALES_DATE, '%Y-%m-%d') AS SALES_DATE,
    F.PRODUCT_ID,
    NULL AS USER_ID, -- OFFLINE_SALE 데이터의 USER_ID는 NULL로 표시
    F.SALES_AMOUNT
FROM 
    ONLINE_SALE AS N
RIGHT JOIN 
    OFFLINE_SALE AS F
ON 
    N.PRODUCT_ID = F.PRODUCT_ID 
    AND N.SALES_DATE = F.SALES_DATE
WHERE 
    F.SALES_DATE BETWEEN '2022-03-01' AND '2022-03-31'

-- 결과 정렬
ORDER BY 
    SALES_DATE ASC, 
    PRODUCT_ID ASC, 
    USER_ID ASC;
